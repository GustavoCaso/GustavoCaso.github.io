<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gustavo Caso: rails</title>
  <subtitle>Posts tagged with rails</subtitle>
  <id>http://gustavocaso.github.io/</id>
  <link href="http://gustavocaso.github.io/"/>
  <link href="http://gustavocaso.github.io/tag/rails/feed.xml" rel="self"/>
  <updated>2014-04-14T13:10:13-04:00</updated>
  <author>
    <name>Gustavo Caso</name>
  </author>
  <entry>
    <title>Rails Postgresql Error ORDER clause</title>
    <link rel="alternate" href="http://gustavocaso.github.io/2014/04/14/rails-postgresql-error-order/"/>
    <id>http://gustavocaso.github.io/2014/04/14/rails-postgresql-error-order/</id>
    <published>2014-04-14T13:10:13-04:00</published>
    <updated>2019-05-06T22:23:25-04:00</updated>
    <author>
      <name>Gustavo Caso</name>
    </author>
    <summary type="html">&lt;p&gt;Postgresql ORDER clause or be used in a aggregate function&lt;/p&gt;

&lt;p&gt;While working in a rails project recently, I step on an error that say: &lt;code&gt;PG::Error: ERROR:  column "number" must appear in the GROUP BY clause or be used in an aggregate function&lt;/code&gt;,
I didn’t have any idea how to solve it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Decorator Pattern</title>
    <link rel="alternate" href="http://gustavocaso.github.io/2015/02/28/decorator-pattern/"/>
    <id>http://gustavocaso.github.io/2015/02/28/decorator-pattern/</id>
    <published>2015-02-28T03:55:59-05:00</published>
    <updated>2019-05-06T22:23:25-04:00</updated>
    <author>
      <name>Gustavo Caso</name>
    </author>
    <summary type="html">&lt;p&gt;Last night I was reading some blogs about ruby patterns, for me is sometimes difficult to understand the use of this kind of patterns, mostly because in my
work we just throw thousand of lines of code, and deal with a lot of legacy code from other person who contribute to our projects. I currently work for comparason website in Spain &lt;a href="https://www.kelisto.es" rel="nofollow"&gt;Kelisto&lt;/a&gt;
Lately there is one projects that is architecture is strongly inheritance, so there are many classes that inherited from a parent class.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Set up a simple deployment system</title>
    <link rel="alternate" href="http://gustavocaso.github.io/2014/07/30/set-up-a-simple-deployment-system/"/>
    <id>http://gustavocaso.github.io/2014/07/30/set-up-a-simple-deployment-system/</id>
    <published>2014-07-30T05:04:20-04:00</published>
    <updated>2019-05-06T22:23:25-04:00</updated>
    <author>
      <name>Gustavo Caso</name>
    </author>
    <summary type="html">&lt;p&gt;Before deploy in production is always recommended to test everything first, probably you have a Test suit for test your application, but you never know want is going to happen when you deploy all changes to production.
What people usually do is create a staging environment, that copies the production environment.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Delayed job and Send email with Attachements</title>
    <link rel="alternate" href="http://gustavocaso.github.io/2014/04/21/delayed-job-and-send-email/"/>
    <id>http://gustavocaso.github.io/2014/04/21/delayed-job-and-send-email/</id>
    <published>2014-04-21T14:21:46-04:00</published>
    <updated>2019-05-06T22:23:25-04:00</updated>
    <author>
      <name>Gustavo Caso</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;strong&gt;Sending emails with rails and Heroku (Updated 2014-04-24)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rails makes extremly easy to send emails, I’m not going to explain how to do it, there are pretty good tutorials around the internet,
this one is really well explain: &lt;a href="http://edgeguides.rubyonrails.org/action_mailer_basics.html" rel="nofollow"&gt;Action Mailer Basics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Self-referential Associations</title>
    <link rel="alternate" href="http://gustavocaso.github.io/2014/07/08/self-referential-associations/"/>
    <id>http://gustavocaso.github.io/2014/07/08/self-referential-associations/</id>
    <published>2014-07-08T11:12:53-04:00</published>
    <updated>2019-05-06T22:23:25-04:00</updated>
    <author>
      <name>Gustavo Caso</name>
    </author>
    <summary type="html">&lt;p&gt;When I first heard about this concept I was a little bit confuse. I was reading &lt;a href="http://www.railstutorial.org/" rel="nofollow"&gt;Learn rails by Example&lt;/a&gt; by Michael Hart&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Using Rails Resolver Api</title>
    <link rel="alternate" href="http://gustavocaso.github.io/2015/05/04/using-rails-resolver-api/"/>
    <id>http://gustavocaso.github.io/2015/05/04/using-rails-resolver-api/</id>
    <published>2015-05-04T17:06:26-04:00</published>
    <updated>2019-05-06T22:23:25-04:00</updated>
    <author>
      <name>Gustavo Caso</name>
    </author>
    <summary type="html">&lt;h5&gt;Implement Rails Variants in Rails 3.1&lt;/h5&gt;

&lt;p&gt;Yesterday at work we decided that we need to improve our user experience in web mobile.
So we decided that it was time to create a different view for each action. Lately in &lt;a href="http://guides.rubyonrails.org/" rel="nofollow"&gt;Rails 4&lt;/a&gt; there is this really cool feature called &lt;a href="http://guides.rubyonrails.org/4_1_release_notes.html#action-pack-variants" rel="nofollow"&gt;Variants&lt;/a&gt;
really neat one if you ask me.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
</feed>
